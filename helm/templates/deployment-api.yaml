apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "services-app.fullname" . }}-api
  labels:
    app: {{ include "services-app.name" . }}
    tier: api
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "services-app.name" . }}
      tier: api
  template:
    metadata:
      labels:
        app: {{ include "services-app.name" . }}
        tier: api
    spec:
      containers:
        - name: api
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # Start the app with the debug flag enabled:
          command: ["node", "--inspect=0.0.0.0:{{ .Values.debug.inspectPort }}", "dist/main.js"]
          ports:
            - containerPort: {{ .Values.service.port }}
              name: http
            - containerPort: {{ .Values.debug.inspectPort }}
              name: debug
          env:
            - name: NODE_ENV
              value: "{{ .Values.env.NODE_ENV }}"
            - name: DB_HOST
              value: {{ include "services-app.fullname" . }}-postgres
            - name: DB_PORT
              value: "{{ .Values.env.DB_PORT }}"
            - name: DB_USER
              value: "{{ .Values.env.DB_USER }}"
            - name: DB_PASSWORD
              value: "{{ .Values.env.DB_PASSWORD }}"
            - name: DB_NAME
              value: "{{ .Values.env.DB_NAME }}"
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: JWT_SECRET
            - name: JWT_EXPIRATION_TIME
              value: "{{ .Values.env.JWT_EXPIRATION_TIME }}" 
      initContainers:
        - name: migrate
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["node", "dist/main.js", "migrate"]
          env:
            - name: NODE_ENV
              value: "{{ .Values.env.NODE_ENV }}"
            - name: DB_HOST
              value: {{ include "services-app.fullname" . }}-postgres
            - name: DB_PORT
              value: "{{ .Values.env.DB_PORT }}"
            - name: DB_USER
              value: "{{ .Values.env.DB_USER }}"
            - name: DB_PASSWORD
              value: "{{ .Values.env.DB_PASSWORD }}"
            - name: DB_NAME
              value: "{{ .Values.env.DB_NAME }}"
